-optimizationpasses 5
-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-dontpreverify
-verbose
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*,!code/allocation/variable
-dontwarn android.support.**

-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class com.android.vending.licensing.ILicensingService

-keepclasseswithmembernames class * {
    native <methods>;
}

-keepclasseswithmembernames class * {
    public <init>(android.content.Context, android.util.AttributeSet);
}

-keepclasseswithmembernames class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);
}

-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keep class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator *;
}

# this is required to keep the Annotations
-keepattributes *Annotation*
		
# keep relevant members in Activities
-keepclassmembers class * extends android.app.Activity 
{
	# optional, keep TAG fields if you use them for automatic namespacing
	# you don't need this line if don't use the "permanent" feature or
	# if you set the namespace like so:
	# @Retain(permanent = true, classNS = TAG)
	# or
	# @Retain(permanent = true, classNS = "someNameSpace")
	java.lang.String TAG;
	
	# optional, keep names of retained fields
	# you don't need this line if don't use the "permanent" feature or
	# if you set the key manually like in @Retain(key = "someKey");
	@org.dmfs.android.retentionmagic.annotations.* <fields>;

	# optional, keep names of fields considered for the instance names space, adjust to your needs
	# you don't need this line if don't use the "permanent" feature or
	# if you don't use per instance fields 
	int mInstance;
}

# same for Fragments
-keepclassmembers class * extends android.app.Fragment 
{
	java.lang.String TAG;
	@org.dmfs.android.retentionmagic.annotations.* <fields>;
	private java.lang.String instanceTag;
}

# same for support library Fragments
-keepclassmembers class * extends android.support.v4.app.Fragment 
{
	java.lang.String TAG;
	@org.dmfs.android.retentionmagic.annotations.* <fields>;
	private java.lang.String instanceTag;
}